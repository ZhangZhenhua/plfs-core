diff -Naur openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs.c openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs.c
--- openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs.c	1969-12-31 17:00:00.000000000 -0700
+++ openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs.c	2010-03-08 19:45:47.740946000 -0700
@@ -0,0 +1,37 @@
+/* -*- Mode: C; c-basic-offset:4 ; -*- */
+/* 
+ *   $Id: ad_plfs.c,v 1.6 2005/05/23 23:27:44 rross Exp $
+ *
+ *   Copyright (C) 2001 University of Chicago. 
+ *   See COPYRIGHT notice in top-level directory.
+ */
+
+#include "ad_plfs.h"
+
+/* adioi.h has the ADIOI_Fns_struct define */
+#include "adioi.h"
+
+struct ADIOI_Fns_struct ADIO_PLFS_operations = {
+    ADIOI_PLFS_Open, /* Open */
+    ADIOI_PLFS_ReadContig, /* ReadContig */
+    ADIOI_PLFS_WriteContig, /* WriteContig */
+    ADIOI_GEN_ReadStridedColl, /* ReadStridedColl */
+    ADIOI_GEN_WriteStridedColl, /* WriteStridedColl */
+    ADIOI_GEN_SeekIndividual, /* SeekIndividual */
+    ADIOI_PLFS_Fcntl, /* Fcntl */
+    ADIOI_GEN_SetInfo, /* SetInfo */
+    ADIOI_GEN_ReadStrided, /* ReadStrided */
+    ADIOI_GEN_WriteStrided, /* WriteStrided */
+    ADIOI_PLFS_Close, /* Close */
+    ADIOI_FAKE_IreadContig, /* IreadContig */
+    ADIOI_FAKE_IwriteContig, /* IwriteContig */
+    ADIOI_FAKE_IODone, /* ReadDone */
+    ADIOI_FAKE_IODone, /* WriteDone */
+    ADIOI_FAKE_IOComplete, /* ReadComplete */
+    ADIOI_FAKE_IOComplete, /* WriteComplete */
+    ADIOI_FAKE_IreadStrided, /* IreadStrided */
+    ADIOI_FAKE_IwriteStrided, /* IwriteStrided */
+    ADIOI_PLFS_Flush, /* Flush */
+    ADIOI_PLFS_Resize, /* Resize */
+    ADIOI_PLFS_Delete, /* Delete */
+};
diff -Naur openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_close.c openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_close.c
--- openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_close.c	1969-12-31 17:00:00.000000000 -0700
+++ openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_close.c	2010-03-08 19:45:47.742943000 -0700
@@ -0,0 +1,29 @@
+/* -*- Mode: C; c-basic-offset:4 ; -*- */
+/* 
+ *   $Id: ad_plfs_close.c,v 1.9 2004/10/04 15:51:01 robl Exp $    
+ *
+ *   Copyright (C) 1997 University of Chicago. 
+ *   See COPYRIGHT notice in top-level directory.
+ */
+
+#include "ad_plfs.h"
+
+void ADIOI_PLFS_Close(ADIO_File fd, int *error_code)
+{
+    int err, rank;
+    static char myname[] = "ADIOI_PLFS_CLOSE";
+    plfs_debug( stderr, "%s: begin\n", myname );
+
+    MPI_Comm_rank( fd->comm, &rank );
+    err = plfs_close(fd->fs_ptr, rank);
+    fd->fs_ptr = NULL;
+
+    if (err < 0 ) {
+	*error_code = MPIO_Err_create_code(MPI_SUCCESS, MPIR_ERR_RECOVERABLE,
+					   myname, __LINE__, MPI_ERR_IO,
+					   "**io",
+					   "**io %s", strerror(-err));
+    } else {
+         *error_code = MPI_SUCCESS;
+    }
+}
diff -Naur openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_delete.c openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_delete.c
--- openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_delete.c	1969-12-31 17:00:00.000000000 -0700
+++ openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_delete.c	2010-03-08 19:45:47.743949000 -0700
@@ -0,0 +1,26 @@
+/* -*- Mode: C; c-basic-offset:4 ; -*- */
+/* 
+ *   $Id: ad_plfs_delete.c,v 1.7 2004/10/04 15:51:01 robl Exp $    
+ *
+ *   Copyright (C) 1997 University of Chicago. 
+ *   See COPYRIGHT notice in top-level directory.
+ */
+
+#include "ad_plfs.h"
+#include "adio.h"
+
+void ADIOI_PLFS_Delete(char *filename, int *error_code)
+{
+    int err;
+    static char myname[] = "ADIOI_PLFS_DELETE";
+    plfs_debug( stderr, "%s: begin\n", myname );
+
+    err = plfs_unlink(filename);
+    if (err < 0) {
+	*error_code = MPIO_Err_create_code(MPI_SUCCESS, MPIR_ERR_RECOVERABLE,
+					   myname, __LINE__, MPI_ERR_IO,
+					   "**io",
+					   "**io %s", strerror(-err));
+    }
+    else *error_code = MPI_SUCCESS;
+}
diff -Naur openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_fcntl.c openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_fcntl.c
--- openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_fcntl.c	1969-12-31 17:00:00.000000000 -0700
+++ openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_fcntl.c	2010-03-08 19:45:47.850957000 -0700
@@ -0,0 +1,48 @@
+/* -*- Mode: C; c-basic-offset:4 ; -*- */
+/* 
+ *
+ *   Copyright (C) 1997 University of Chicago. 
+ *   See COPYRIGHT notice in top-level directory.
+ */
+
+#include "ad_plfs.h"
+
+void ADIOI_PLFS_Fcntl(ADIO_File fd, int flag, ADIO_Fcntl_t *fcntl_struct,
+		      int *error_code)
+{
+    static char myname[] = "ADIOI_PVFS_FCNTL";
+    struct stat buf;
+    int ret;
+
+    plfs_debug( stderr, "%s: begin\n" );
+
+    switch(flag) {
+    case ADIO_FCNTL_GET_FSIZE:
+        ret = plfs_getattr( fd->fs_ptr, NULL, &buf );
+        if ( ret == 0 ) {
+            fcntl_struct->fsize = buf.st_size;
+            *error_code = MPI_SUCCESS;
+        } else {
+	    *error_code = MPIO_Err_create_code(MPI_SUCCESS,
+					       MPIR_ERR_RECOVERABLE, myname,
+					       __LINE__, MPI_ERR_IO, "**io",
+					       "**io %s", strerror(errno));
+        }
+	//if (fd->fp_sys_posn != -1) {
+	//     pvfs_lseek64(fd->fd_sys, fd->fp_sys_posn, SEEK_SET);
+        //}
+	break;
+
+    case ADIO_FCNTL_SET_DISKSPACE:
+    case ADIO_FCNTL_SET_ATOMICITY:
+    default:
+	/* --BEGIN ERROR HANDLING-- */
+	*error_code = MPIO_Err_create_code(MPI_SUCCESS,
+					   MPIR_ERR_RECOVERABLE,
+					   myname, __LINE__,
+					   MPI_ERR_ARG,
+					   "**flag", "**flag %d", flag);
+	return;  
+	/* --END ERROR HANDLING-- */
+    }
+}
diff -Naur openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_flush.c openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_flush.c
--- openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_flush.c	1969-12-31 17:00:00.000000000 -0700
+++ openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_flush.c	2010-03-08 19:45:47.745945000 -0700
@@ -0,0 +1,31 @@
+/* -*- Mode: C; c-basic-offset:4 ; -*- */
+/* 
+ *   $Id: ad_plfs_flush.c,v 1.13 2004/10/04 15:51:08 robl Exp $    
+ *
+ *   Copyright (C) 1997 University of Chicago. 
+ *   See COPYRIGHT notice in top-level directory.
+ */
+
+#include "ad_plfs.h"
+
+void ADIOI_PLFS_Flush(ADIO_File fd, int *error_code)
+{
+    int err, rank;
+    static char myname[] = "ADIOI_PLFS_FLUSH";
+    plfs_debug( stderr, "%s: begin\n", myname );
+
+    MPI_Comm_rank(fd->comm, &rank);
+
+    // even though this is a collective routine, everyone must flush here
+    // because everyone has there own data file handle
+    err = plfs_sync(fd->fs_ptr,rank);
+
+    if (err < 0) {
+	*error_code = MPIO_Err_create_code(MPI_SUCCESS, MPIR_ERR_RECOVERABLE,
+					   myname, __LINE__, MPI_ERR_IO,
+					   "**io",
+					   "**io %s", strerror(-err));
+    } else {
+         *error_code = MPI_SUCCESS;
+    }
+}
diff -Naur openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs.h openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs.h
--- openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs.h	1969-12-31 17:00:00.000000000 -0700
+++ openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs.h	2010-03-08 19:45:47.748943000 -0700
@@ -0,0 +1,55 @@
+/* -*- Mode: C; c-basic-offset:4 ; -*- */
+/* 
+ *   $Id: ad_plfs.h,v 1.6 2004/10/04 15:51:01 robl Exp $    
+ *
+ *   Copyright (C) 1997 University of Chicago. 
+ *   See COPYRIGHT notice in top-level directory.
+ */
+
+#ifndef AD_PLFS_INCLUDE
+#define AD_PLFS_INCLUDE
+
+#ifndef ROMIOCONF_H_INCLUDED
+#include "romioconf.h"
+#define ROMIOCONF_H_INCLUDED
+#endif
+#ifdef ROMIO_PLFS_NEEDS_INT64_DEFINITION
+typedef long long int int64_t;
+#endif
+
+#include <unistd.h>
+#include <sys/types.h>
+#include <sys/uio.h>
+#include <fcntl.h>
+#include "plfs.h"
+#include "adio.h"
+
+void ADIOI_PLFS_Open(ADIO_File fd, int *error_code);
+void ADIOI_PLFS_Close(ADIO_File fd, int *error_code);
+void ADIOI_PLFS_ReadContig(ADIO_File fd, void *buf, int count, 
+                      MPI_Datatype datatype, int file_ptr_type,
+                     ADIO_Offset offset, ADIO_Status *status, int
+		     *error_code);
+void ADIOI_PLFS_WriteContig(ADIO_File fd, void *buf, int count, 
+                      MPI_Datatype datatype, int file_ptr_type,
+                      ADIO_Offset offset, ADIO_Status *status, int
+		      *error_code);   
+void ADIOI_PLFS_Fcntl(ADIO_File fd, int flag, ADIO_Fcntl_t *fcntl_struct, int
+		*error_code); 
+/*
+void ADIOI_PLFS_WriteStrided(ADIO_File fd, void *buf, int count,
+		       MPI_Datatype datatype, int file_ptr_type,
+		       ADIO_Offset offset, ADIO_Status *status, int
+		       *error_code);
+void ADIOI_PLFS_ReadStrided(ADIO_File fd, void *buf, int count,
+		       MPI_Datatype datatype, int file_ptr_type,
+		       ADIO_Offset offset, ADIO_Status *status, int
+		       *error_code);
+void ADIOI_PLFS_SetInfo(ADIO_File fd, MPI_Info users_info, int *error_code);
+*/
+void ADIOI_PLFS_Flush(ADIO_File fd, int *error_code);
+void ADIOI_PLFS_Delete(char *filename, int *error_code);
+void ADIOI_PLFS_Resize(ADIO_File fd, ADIO_Offset size, int *error_code);
+
+
+#endif
diff -Naur openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_open.c openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_open.c
--- openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_open.c	1969-12-31 17:00:00.000000000 -0700
+++ openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_open.c	2010-03-08 19:45:47.749951000 -0700
@@ -0,0 +1,79 @@
+/* -*- Mode: C; c-basic-offset:4 ; -*- */
+/* 
+ *   $Id: ad_plfs_open.c,v 1.18 2005/05/23 23:27:44 rross Exp $    
+ *
+ *   Copyright (C) 1997 University of Chicago. 
+ *   See COPYRIGHT notice in top-level directory.
+ */
+
+#include "ad_plfs.h"
+
+// don't worry about any hints yet
+void ADIOI_PLFS_Open(ADIO_File fd, int *error_code)
+{
+    // I think perm is the mode and amode is the flags
+    int err = 0, perm, amode, old_mask, rank;
+    Plfs_fd *pfd = NULL;
+
+    MPI_Comm_rank( fd->comm, &rank );
+    static char myname[] = "ADIOI_PLFS_OPEN";
+    plfs_debug( stderr, "%s: begin (%d)\n", myname, rank );
+
+    if (fd->perm == ADIO_PERM_NULL) {
+        old_mask = umask(022);
+        umask(old_mask);
+        perm = old_mask ^ 0666;
+    }
+    else perm = fd->perm;
+
+    amode = 0;//O_META;
+    if (fd->access_mode & ADIO_RDONLY)
+        amode = amode | O_RDONLY;
+    if (fd->access_mode & ADIO_WRONLY)
+        amode = amode | O_WRONLY;
+    if (fd->access_mode & ADIO_RDWR)
+        amode = amode | O_RDWR;
+    if (fd->access_mode & ADIO_EXCL)
+        amode = amode | O_EXCL;
+
+    // MPI_File_open is a collective call so only create it once
+    // unless comm = MPI_COMM_SELF in which case
+    // it appears that ad_common only passes the ADIO_CREATE to 0
+    if (fd->access_mode & ADIO_CREATE) {
+        err = plfs_create( fd->filename, perm, amode );
+        // then create the individual hostdirs with one proc per node
+        // this fd->hints->ranklist thing doesn't work
+        /*
+        if ( err == 0 && rank != 0 && rank == fd->hints->ranklist[0] ) {
+            err = plfs_create( fd->filename, perm, amode );
+        }
+        MPI_Bcast( &err, 1, MPI_INT, 0, fd->comm );
+        */
+    }
+
+    // handle any error from a create
+    if ( err < 0 ) {
+        *error_code = MPIO_Err_create_code(MPI_SUCCESS, MPIR_ERR_RECOVERABLE,
+					   myname, __LINE__, MPI_ERR_IO,
+					   "**io",
+					   "**io %s", strerror(-err));
+        plfs_debug( stderr, "%s: failure on create\n", myname );
+        return;
+    }
+
+    // if we get here, it is time to open the file
+    err = plfs_open( &pfd, fd->filename, amode, rank, perm );
+    fd->fd_direct = -1;
+
+    if ( err < 0 ) {
+        *error_code = MPIO_Err_create_code(MPI_SUCCESS, MPIR_ERR_RECOVERABLE,
+					   myname, __LINE__, MPI_ERR_IO,
+					   "**io",
+					   "**io %s", strerror(-err));
+        plfs_debug( stderr, "%s: failure\n", myname );
+    } else {
+        plfs_debug( stderr, "%s: Success (%d)!\n", myname, rank );
+        fd->fs_ptr = pfd;
+        *error_code = MPI_SUCCESS;
+    }
+}
diff -Naur openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_read.c openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_read.c
--- openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_read.c	1969-12-31 17:00:00.000000000 -0700
+++ openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_read.c	2010-03-08 19:45:47.751943000 -0700
@@ -0,0 +1,50 @@
+/* -*- Mode: C; c-basic-offset:4 ; -*- */
+/* 
+ *   $Id: ad_plfs_read.c,v 1.15 2004/10/07 16:15:17 rross Exp $    
+ *
+ *   Copyright (C) 1997 University of Chicago. 
+ *   See COPYRIGHT notice in top-level directory.
+ */
+
+#include "adio.h"
+#include "adio_extern.h"
+#include "ad_plfs.h"
+
+void ADIOI_PLFS_ReadContig(ADIO_File fd, void *buf, int count, 
+                     MPI_Datatype datatype, int file_ptr_type,
+		     ADIO_Offset offset, ADIO_Status *status, int *error_code)
+{
+    int err=-1, datatype_size, len, rank;
+    ADIO_Offset myoff;
+    static char myname[] = "ADIOI_PLFS_READCONTIG";
+
+    MPI_Type_size(datatype, &datatype_size);
+    len = datatype_size * count;
+    MPI_Comm_rank( fd->comm, &rank );
+
+    // for the romio/test/large_file we always get an offset of 0
+    // maybe we need to increment fd->fp_ind ourselves?
+    if (file_ptr_type == ADIO_EXPLICIT_OFFSET) {
+        myoff = offset;
+    } else {
+        myoff = fd->fp_ind;
+    }
+    plfs_debug( stderr, "%s: offset %ld len %ld rank %d\n", 
+            myname, (long)myoff, (long)len, rank );
+
+    err = plfs_read( fd->fs_ptr, buf, len, myoff );
+
+#ifdef HAVE_STATUS_SET_BYTES
+    if (err >= 0 ) MPIR_Status_set_bytes(status, datatype, err);
+#endif
+
+    if (err < 0 ) {
+	*error_code = MPIO_Err_create_code(MPI_SUCCESS, MPIR_ERR_RECOVERABLE,
+					   myname, __LINE__, MPI_ERR_IO,
+					   "**io",
+					   "**io %s", strerror(-err));
+    } else {
+        fd->fp_ind += err;
+        *error_code = MPI_SUCCESS;
+    }
+}
diff -Naur openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_resize.c openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_resize.c
--- openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_resize.c	1969-12-31 17:00:00.000000000 -0700
+++ openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_resize.c	2010-03-08 19:45:47.753940000 -0700
@@ -0,0 +1,34 @@
+/* -*- Mode: C; c-basic-offset:4 ; -*- */
+/* 
+ *   $Id: ad_plfs_resize.c,v 1.15 2004/10/04 16:37:05 robl Exp $    
+ *
+ *   Copyright (C) 1997 University of Chicago. 
+ *   See COPYRIGHT notice in top-level directory.
+ */
+
+#include "ad_plfs.h"
+
+void ADIOI_PLFS_Resize(ADIO_File fd, ADIO_Offset size, int *error_code)
+{
+    int err;
+    int rank;
+    static char myname[] = "ADIOI_PLFS_RESIZE";
+    plfs_debug( stderr, "%s: begin\n", myname );
+
+    /* because MPI_File_set_size is a collective operation, and PLFS1 clients
+     * do not cache metadata locally, one client can resize and broadcast the
+     * result to the others */
+    MPI_Comm_rank(fd->comm, &rank);
+    if (rank == fd->hints->ranklist[0]) {
+	err = plfs_trunc(fd->fs_ptr, fd->filename, size);
+    }
+    MPI_Bcast(&err, 1, MPI_INT, 0, fd->comm);
+
+    if (err < 0) {
+	*error_code = MPIO_Err_create_code(MPI_SUCCESS, MPIR_ERR_RECOVERABLE,
+					   myname, __LINE__, MPI_ERR_IO,
+					   "**io",
+					   "**io %s", strerror(-err));
+    }
+    else *error_code = MPI_SUCCESS;
+}
diff -Naur openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_write.c openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_write.c
--- openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_write.c	1969-12-31 17:00:00.000000000 -0700
+++ openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/ad_plfs_write.c	2010-03-08 19:45:47.754950000 -0700
@@ -0,0 +1,50 @@
+/* -*- Mode: C; c-basic-offset:4 ; -*- */
+/* 
+ *   $Id: ad_plfs_write.c,v 1.17 2004/10/07 16:15:18 rross Exp $    
+ *
+ *   Copyright (C) 1997 University of Chicago. 
+ *   See COPYRIGHT notice in top-level directory.
+ */
+
+#include "ad_plfs.h"
+#include "adio_extern.h"
+
+void ADIOI_PLFS_WriteContig(ADIO_File fd, void *buf, int count, 
+			    MPI_Datatype datatype, int file_ptr_type,
+			    ADIO_Offset offset, ADIO_Status *status,
+			    int *error_code)
+{
+    int err=-1, datatype_size, len, rank;
+    ADIO_Offset myoff;
+    static char myname[] = "ADIOI_PLFS_WRITECONTIG";
+
+    MPI_Type_size(datatype, &datatype_size);
+    len = datatype_size * count;
+    MPI_Comm_rank( fd->comm, &rank );
+
+    // for the romio/test/large_file we always get an offset of 0
+    // maybe we need to increment fd->fp_ind ourselves?
+    if (file_ptr_type == ADIO_EXPLICIT_OFFSET) {
+        myoff = offset;
+    } else {
+        myoff = fd->fp_ind;
+    }
+    plfs_debug( stderr, "%s: offset %ld len %ld rank %d\n", 
+            myname, (long)myoff, (long)len, rank );
+    err = plfs_write( fd->fs_ptr, buf, len, myoff, rank );
+
+#ifdef HAVE_STATUS_SET_BYTES
+    if (err >= 0 ) MPIR_Status_set_bytes(status, datatype, err);
+#endif
+
+    if (err < 0 ) {
+        *error_code = MPIO_Err_create_code(MPI_SUCCESS, MPIR_ERR_RECOVERABLE,
+					   myname, __LINE__, MPI_ERR_IO,
+					   "**io",
+					   "**io %s", strerror(-err));
+    } else {
+        fd->fp_ind += err;
+        *error_code = MPI_SUCCESS;
+    }
+}
+
diff -Naur openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/Makefile.am openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/Makefile.am
--- openmpi-1.3.4.prepped/ompi/mca/io/romio/romio/adio/ad_plfs/Makefile.am	1969-12-31 17:00:00.000000000 -0700
+++ openmpi-1.3.4/ompi/mca/io/romio/romio/adio/ad_plfs/Makefile.am	2010-03-08 19:52:28.132949000 -0700
@@ -0,0 +1,34 @@
+#
+# Copyright (c) 2004-2005 The Trustees of Indiana University and Indiana
+#                         University Research and Technology
+#                         Corporation.  All rights reserved.
+# Copyright (c) 2004-2005 The University of Tennessee and The University
+#                         of Tennessee Research Foundation.  All rights
+#                         reserved.
+# Copyright (c) 2004-2005 High Performance Computing Center Stuttgart, 
+#                         University of Stuttgart.  All rights reserved.
+# Copyright (c) 2004-2005 The Regents of the University of California.
+#                         All rights reserved.
+# Copyright (c) 2008      Cisco Systems, Inc.  All rights reserved.
+# $COPYRIGHT$
+# 
+# Additional copyrights may follow
+# 
+# $HEADER$
+#
+
+include $(top_srcdir)/Makefile.options
+
+noinst_LTLIBRARIES = libadio_plfs.la
+libadio_plfs_la_SOURCES = \
+	ad_plfs.c \
+	ad_plfs.h \
+	ad_plfs_close.c \
+	ad_plfs_delete.c \
+	ad_plfs_fcntl.c \
+	ad_plfs_flush.c \
+	ad_plfs_open.c \
+	ad_plfs_read.c \
+	ad_plfs_resize.c \
+	ad_plfs_write.c 
+
